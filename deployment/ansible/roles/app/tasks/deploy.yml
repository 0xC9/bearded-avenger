---
#- name: Update code
#  git: repo={{ git_url }} dest={{ app_user_home }}/bearded-avenger version={{ git_version }} accept_hostkey=yes
#  register: git
#  become: yes
#  become_user: "{{ app_user }}"
#
#- name: register latest release
#  command: curl -s https://api.github.com/repos/csirtgadgets/bearded-avenger/releases | grep browser_download_url | head -n 1 | cut -d '"' -f 4
#  register: latest_release_url
#
#- name: Pull latest release
#  get_url: url={{ latest_release_url }} dest="{{ app_user_home }}/bearded-avenger"

- name: create dest directory
  file: path={{ app_user_home }}/bearded-avenger mode=0770 owner="{{ app_user }}" group="{{ app_user }}" state=directory
  become: yes
  become_user: "{{ app_user }}"

- name: rsync files
  synchronize:
    dest: "{{ app_user_home }}/bearded-avenger"
    src: "{{ app_src_path }}/{{ item }}"
    rsync_opts:
        - '--exclude=.vagrant'
        - '--exclude=.idea'
        - '--exclude=.cache'
        - '--exclude=.git'
        - '--exclude=tmp'
        - '--exclude=log'
        - '--exclude=*.box'
        - '--exclude=*.pyc'
        - '--exclude=*.sqlite'
        - '--exclude=build'
  with_items:
      - LICENSE
      - MANIFEST.in
      - Makefile
      - README.md
      - cif
      - contributing.md
      - deployment
      - docs
      - hacking
      - packaging
      - requirements.txt
      - rules
      - setup.cfg
      - setup.py
      - tests
      - versioneer.py

- name: Create RUNTIME_PATH
  file: path="{{ app_runtime_path }}" state=directory recurse=true mode=0770 owner="{{ app_user }}" group="{{ app_user }}"

- name: Create logging path
  file: path="{{ app_log_path }}" state=directory recurse=true mode=0770 owner="{{ app_user }}" group="{{ app_user }}"

- name: install requirements
  pip: requirements="{{ app_user_home }}/bearded-avenger/requirements.txt"
  sudo: true

- name: setup
  shell: python setup.py install chdir="{{ app_user_home }}/bearded-avenger/"
  sudo: true

- name: setup the rules directory
  file: path="{{ app_rules_path }}/rules/default" state=directory mode=770 owner="{{ app_user }}" group="{{ app_user }}"

- name: copy cif-smrt rules
  copy: src="../../rules" dest="{{ app_rules_path }}" backup=yes owner="{{ app_user }}" group="{{ app_user }}" mode="u=rw,g=rw,o-rwx"

- name: copy init scripts
  copy: src="{{ item }}" dest="/etc/init.d/{{ item }}" mode=0755 backup=yes
  with_items:
    - cif-router
    - cif-smrt
    - cif-httpd
    - cif-storage
    - cif-hunters
    - cif-services

- name: copy supervisord configs
  copy: src="{{ item }}" dest=/etc/cif/ mode=0660 owner="{{ app_user }}" group="{{ app_user }}"
  with_items:
    - cif-router.conf
    - cif-httpd.conf
    - cif-smrt.conf
    - cif-storage.conf
    - cif-hunters.conf

- name: copy /etc/defaults/cif
  copy: src=defaults dest=/etc/default/cif mode=0660 owner="{{ app_user }}" group="{{ app_user }}"